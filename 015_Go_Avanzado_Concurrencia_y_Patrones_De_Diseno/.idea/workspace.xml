<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9035dd34-2e58-4c81-9c97-4c1bf71ef0ad" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2E4vgNFETBeh1vbSl5ctxmfFssB" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Endava Workspace/repositories/integration-xact-api-service&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Endava Workspace\Cursos_Platzi\controller\samples" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Endava Workspace\Cursos_Platzi\design_patterns\observer" />
      <recent name="C:\Endava Workspace\Cursos_Platzi\testing" />
      <recent name="C:\Endava Workspace\Cursos_Platzi\oop" />
      <recent name="C:\Endava Workspace\Cursos_Platzi\introduction" />
      <recent name="C:\Endava Workspace\Cursos_Platzi\functions" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/jsovalles/Cursos_Platzi">
    <configuration name="go build github.com/jsovalles/Cursos_Platzi" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Cursos_Platzi" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/jsovalles/Cursos_Platzi" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestFibonacci in github.com/jsovalles/Cursos_Platzi/testing" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Cursos_Platzi" />
      <working_directory value="$PROJECT_DIR$/testing" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/jsovalles/Cursos_Platzi/testing" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestFibonacci\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetFullTimeEmployeeById in github.com/jsovalles/Cursos_Platzi/mock_testing (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Cursos_Platzi" />
      <working_directory value="$PROJECT_DIR$/mock_testing" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/jsovalles/Cursos_Platzi/mock_testing" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetFullTimeEmployeeById\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetFullTimeEmployeeById in github.com/jsovalles/Cursos_Platzi/mock_testing" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Cursos_Platzi" />
      <working_directory value="$PROJECT_DIR$/mock_testing" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/jsovalles/Cursos_Platzi/mock_testing" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetFullTimeEmployeeById\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/jsovalles/Cursos_Platzi/testing" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Cursos_Platzi" />
      <working_directory value="$PROJECT_DIR$/testing" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/jsovalles/Cursos_Platzi/testing" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/jsovalles/Cursos_Platzi" />
        <item itemvalue="Go Test.TestGetFullTimeEmployeeById in github.com/jsovalles/Cursos_Platzi/mock_testing (1)" />
        <item itemvalue="Go Test.TestGetFullTimeEmployeeById in github.com/jsovalles/Cursos_Platzi/mock_testing" />
        <item itemvalue="Go Test.go test github.com/jsovalles/Cursos_Platzi/testing" />
        <item itemvalue="Go Test.TestFibonacci in github.com/jsovalles/Cursos_Platzi/testing" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="GoApplicationRunConfiguration">
        <watch expression="*(*&quot;chan github.com/jsovalles/Cursos_Platzi/finalProject.Job&quot;)(824635055984)" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Cursos_Platzi$go_test_Cursos_Platzi.out" NAME="go test Cursos_Platzi Coverage Results" MODIFIED="1661874919549" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>